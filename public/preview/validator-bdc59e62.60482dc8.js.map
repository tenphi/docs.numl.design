{"version":3,"sources":["numl/validator-bdc59e62.js"],"names":["t","params","primary","linkValue","linkHostValue","init","props","for","fieldId","assert","s","split","assertValue","field","host","getAttribute","trim","connected","linkContext","currentForm","disconnectForm","connectForm","changed","form","e","r","registerCheck","unregisterCheck","setValidity","validity"],"mappings":";AAA6E,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAA7E,IAAA,EAAA,QAAA,uBAA8D,MAAcA,UAAAA,EAAd,EAA2BC,oBAAe,MAAA,CAACC,SAAQ,EAAGC,WAAU,EAAGC,eAAc,GAAIC,OAAYC,KAAAA,MAAMC,IAAIP,CAAAA,IAASQ,KAAAA,QAAQR,IAAG,KAAKM,MAAMG,OAAOT,CAAAA,IAAOA,GAAAA,EAAE,CAAOU,MAAAA,EAAEV,EAAEW,MAAM,KAAUF,KAAAA,OAAOC,EAAE,GAAG,KAAKE,YAAYF,EAAE,QAAQ,KAAKD,OAAO,OAAM,MAAMJ,OAAWQ,YAAe,OAAA,KAAKC,KAAKC,aAAa,OAAOC,OAAOC,YAAiBC,KAAAA,YAAY,OAAOlB,IAASmB,KAAAA,aAAanB,IAAI,KAAKmB,aAAa,KAAKC,eAAe,KAAKD,cAAcnB,GAAG,KAAKmB,YAAYnB,EAAEA,GAAG,KAAKqB,gBAAgBC,QAAQtB,EAAEU,GAASY,MAAAA,QAAQtB,EAAEU,GAAG,KAAKa,MAAM,KAAKF,cAAcA,cAAmB,MAACb,QAAQR,EAAES,OAAOC,EAAEa,KAAKC,EAAEZ,YAAYa,GAAG,KAAKzB,GAAGU,GAAGc,GAAG,KAAKD,KAAKG,cAAc1B,EAAE,KAAKU,EAAEe,GAAGL,eAAepB,EAAE,KAAKmB,YAAYT,GAAQ,MAACF,QAAQgB,EAAEf,OAAOgB,GAAG,KAAKD,GAAGC,IAAIzB,EAAE2B,gBAAgBH,GAAGd,UAAU,KAAKa,MAAMK,YAAY5B,GAAQ,MAACc,KAAKU,GAAG,KAAUK,KAAAA,WAAW7B,IAAI,MAAM4B,YAAY5B,IAAG,EAAEwB,EAAAA,GAAAA,EAAExB,EAAE,cAA5zB,QAAA,QAAA","file":"validator-bdc59e62.60482dc8.js","sourceRoot":"..","sourcesContent":["import{W as t,D as s}from\"./index-dbc64107.js\";export default class extends t{static get params(){return{primary:!0,linkValue:!1,linkHostValue:!1}}init(){this.props.for=t=>{this.fieldId=t},this.props.assert=t=>{if(t){const s=t.split(\":\");this.assert=s[0],this.assertValue=s[1]}else this.assert=null},super.init()}get field(){return this.host.getAttribute(\"for\").trim()}connected(){this.linkContext(\"form\",t=>{this.currentForm&&t!==this.currentForm&&this.disconnectForm(this.currentForm,!!t),this.currentForm=t,t&&this.connectForm()})}changed(t,s){super.changed(t,s),this.form&&this.connectForm()}connectForm(){const{fieldId:t,assert:s,form:e,assertValue:r}=this;t&&s&&e&&this.form.registerCheck(t,this,s,r)}disconnectForm(t=this.currentForm,s){const{fieldId:e,assert:r}=this;e&&r&&(t.unregisterCheck(e),s||delete this.form)}setValidity(t){const{host:e}=this;this.validity!==t&&(super.setValidity(t),s(e,t,\"collapse\"))}}\n"]}